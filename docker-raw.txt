https://www.digitalocean.com/community/tutorials/how-to-set-up-a-private-docker-registry-on-ubuntu-14-04

nginx.conf
/data2/docker-all/docker-registry/nginx/registry.conf
-------------------------------------------------------------------------

upstream docker-registry {
  server registry:5000;
}

server {
  listen 443;
  server_name hub.docker.xxx;

  # SSL
  ssl on;
  ssl_certificate /etc/nginx/conf.d/domain.crt;
  ssl_certificate_key /etc/nginx/conf.d/domain.key;

  # disable any limits to avoid HTTP 413 for large image uploads
  client_max_body_size 0;

  # required to avoid HTTP 411: see Issue #1486 (https://github.com/docker/docker/issues/1486)
  chunked_transfer_encoding on;

  location /v2/ {
    # Do not allow connections from docker 1.5 and earlier
    # docker pre-1.6.0 did not properly set the user agent on ping, catch "Go *" user agents
    if ($http_user_agent ~ "^(docker\/1\.(3|4|5(?!\.[0-9]-dev))|Go ).*$" ) {
      return 404;
    }

    # To add basic authentication to v2 use auth_basic setting plus add_header
    auth_basic "registry.localhost";
    auth_basic_user_file /etc/nginx/conf.d/registry.password;
    add_header 'Docker-Distribution-Api-Version' 'registry/2.0' always;

    proxy_pass                          http://docker-registry;
    proxy_set_header  Host              $http_host;   # required for docker client's sake
    proxy_set_header  X-Real-IP         $remote_addr; # pass on real client's IP
    proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
    proxy_set_header  X-Forwarded-Proto $scheme;
    proxy_read_timeout                  900;
  }
}


docker-compose file
/data2/docker-all/docker-registry/docker-compose.yml

-------------------------------------------------------------------------
version: '3'
services:
  nginx:
    image: "nginx:1.9"
    restart: always
    ports:
    - 5043:443
    links:
    - registry:registry
    volumes:
    - ./nginx/:/etc/nginx/conf.d:ro
  registry:
    image: registry:2
    restart: always
    ports:
    - "5000:5000"
    environment:
      REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY: /data
    volumes:
      - ./data:/data

-------------------------------------------------------------------------

ssl crt key generate
openssl genrsa -out devdockerCA.key 4096
openssl req -x509 -new -nodes -key devdockerCA.key -days 10000 -out devdockerCA.crt
openssl genrsa -out domain.key 4096
openssl req -new -key domain.key -out hub.docker.xxx.csr
openssl x509 -req -in hub.docker.xxx.csr -CA devdockerCA.crt -CAkey devdockerCA.key -CAcreateserial -out domain.crt -days 10000

-------------------------------------------------------------------------

ssl crt key copy
/etc/pki/ca-trust/extracted/openssl/devdockerCA.crt
/etc/pki/ca-trust/extracted/devdockerCA.crt
/etc/pki/ca-trust/source/anchors/devdockerCA.crt
/usr/local/share/ca-certificates/docker-dev-cert/devdockerCA.crt
update-ca-trust
update-ca-trust force-enable
update-ca-trust extract

-------------------------------------------------------------------------

create htpasswd
htpasswd -c registry.password easeflowops

-------------------------------------------------------------------------


-------------------------------------------------------------------------

docker proxy config
/etc/systemd/system/docker.service.d/http-proxy.conf
[Service]
Environment="HTTP_PROXY=http://10.x.x.x:3128"
Environment="NO_PROXY=localhost,127.0.0.0/8,hub.docker.xxx,xxx.dockerhub,10.0.0.0/8"

/etc/systemd/system/docker.service.d/http-proxy.conf
[Service]
Environment="HTTPS_PROXY=http://10.x.x.x:3128"
Environment="NO_PROXY=localhost,127.0.0.0/8,hub.docker.xxx,xxx.dockerhub,10.0.0.0/8"

systemctl daemon-reload
systemctl restart docker

docker login https://hub.docker.xxx:5043/v2/
docker tag docker-pgpool:v1 hub.docker.xxx:5043/docker-pgpool:v1
docker push hub.docker.xxx:5043/docker-pgpool:v1
